{"version":3,"sources":["App.js","index.js"],"names":["mic","window","SpeechRecognition","webkitSpeechRecognition","continuous","interimResults","lang","App","useState","isListening","setIsListening","note","setNote","savedNotes","setSavedNotes","useEffect","handleListen","start","onend","console","log","stop","onstart","onresult","e","transcript","Array","from","results","map","result","join","onerror","error","className","style","color","onClick","disabled","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kNAGMA,EAAM,IADcC,OAAOC,mBAAqBD,OAAOE,yBAG7DH,EAAII,YAAa,EACjBJ,EAAIK,gBAAiB,EACrBL,EAAIM,KAAO,QAuEIC,MArEf,WACE,MAAsCC,oBAAS,GAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAAwBF,mBAAS,MAAjC,mBAAOG,EAAP,KAAaC,EAAb,KACA,EAAoCJ,mBAAS,IAA7C,mBAAOK,EAAP,KAAmBC,EAAnB,KAEAC,qBAAU,WACRC,MACC,CAACP,IAEJ,IAAMO,EAAe,WACfP,GACFT,EAAIiB,QACJjB,EAAIkB,MAAQ,WACVC,QAAQC,IAAI,eACZpB,EAAIiB,WAGNjB,EAAIqB,OACJrB,EAAIkB,MAAQ,WACVC,QAAQC,IAAI,0BAIhBpB,EAAIsB,QAAU,WACZH,QAAQC,IAAI,cAGdpB,EAAIuB,SAAW,SAAAC,GACb,IAAMC,EAAaC,MAAMC,KAAKH,EAAEI,SAC7BC,KAAI,SAAAC,GAAM,OAAIA,EAAO,MACrBD,KAAI,SAAAC,GAAM,OAAIA,EAAOL,cACrBM,KAAK,IACRZ,QAAQC,IAAIK,GACZb,EAAQa,GACRzB,EAAIgC,QAAU,SAAAR,GACZL,QAAQC,IAAII,EAAES,UAUpB,OACE,qCACE,mDACA,sBAAKC,UAAU,YAAf,UACE,sBAAKA,UAAU,MAAf,UACE,8CACCzB,EAAc,sBAAM0B,MAAO,CAACC,MAAO,OAArB,uBAAgD,sBAAMD,MAAO,CAACC,MAAO,QAArB,4BAC/D,wBAAQC,QAZO,WACrBvB,EAAc,GAAD,mBAAKD,GAAL,CAAiBF,KAC9BC,EAAQ,KAU+B0B,UAAW3B,EAA5C,uBACA,wBAAQ0B,QAAS,kBAAM3B,GAAgBD,IAAvC,wBACA,4BAAIE,OAEN,sBAAKuB,UAAU,MAAf,UACE,uCACCrB,EAAWgB,KAAI,SAAAlB,GAAI,OAClB,4BAAeA,GAAPA,gBC/DpB4B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.9a777a4e.chunk.js","sourcesContent":["import {useEffect, useState} from 'react';\n\nconst SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\nconst mic = new SpeechRecognition();\n\nmic.continuous = true;\nmic.interimResults = true;\nmic.lang = 'en-US';\n\nfunction App() {\n  const [isListening, setIsListening] = useState(false);\n  const [note, setNote] = useState(null);\n  const [savedNotes, setSavedNotes] = useState([]);\n\n  useEffect(() => {\n    handleListen();\n  }, [isListening])\n\n  const handleListen = () => {\n    if (isListening) {\n      mic.start();\n      mic.onend = () => {\n        console.log('continue...');\n        mic.start();\n      }\n    } else {\n      mic.stop();\n      mic.onend = () => {\n        console.log('Stopped Mic on Click')\n      }\n    }\n\n    mic.onstart = () => {\n      console.log('Mic is on')\n    }\n\n    mic.onresult = e => {\n      const transcript = Array.from(e.results)\n        .map(result => result[0])\n        .map(result => result.transcript)\n        .join('');\n      console.log(transcript);\n      setNote(transcript);\n      mic.onerror = e => {\n        console.log(e.error);\n      }\n    }\n  }\n\n  const handleSaveNote = () => {\n    setSavedNotes([...savedNotes, note]);\n    setNote('')\n  }\n\n  return (\n    <>\n      <h1>Voice to text App</h1>\n      <div className=\"container\">\n        <div className=\"box\">\n          <h2>Current Note</h2>\n          {isListening ? <span style={{color: 'red'}}>record on</span> : <span style={{color: 'grey'}}>record stopped</span>}\n          <button onClick={handleSaveNote} disabled={!note}>Save note</button>\n          <button onClick={() => setIsListening(!isListening)}>Start/Stop</button>\n          <p>{note}</p>\n        </div>\n        <div className=\"box\">\n          <h2>Notes</h2>\n          {savedNotes.map(note => (\n            <p key={note}>{note}</p>\n          ))}\n        </div>\n\n      </div>\n    </>\n\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}